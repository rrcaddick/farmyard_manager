# Generated by Django 5.0.12 on 2025-09-11 13:09

import django.db.models.deletion
import django.utils.timezone
import model_utils.fields
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('entrance', '0007_alter_ticket_status_and_more'),
        ('payments', '0006_transactionitem_addpay_card_number_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.RenameField(
            model_name='refund',
            old_name='approved_by',
            new_name='completed_by',
        ),
        migrations.RemoveField(
            model_name='refund',
            name='processed_at',
        ),
        migrations.RemoveField(
            model_name='refund',
            name='ticket',
        ),
        migrations.RemoveField(
            model_name='refund',
            name='total_amount',
        ),
        migrations.RemoveField(
            model_name='transactionitem',
            name='created_by',
        ),
        migrations.AddField(
            model_name='payment',
            name='created_by',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.PROTECT, related_name='payments', to=settings.AUTH_USER_MODEL),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='refund',
            name='completed_at',
            field=models.DateTimeField(blank=True, db_index=True, null=True),
        ),
        migrations.AddField(
            model_name='refund',
            name='is_removed',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='refund',
            name='ref_number',
            field=models.CharField(blank=True, max_length=255, unique=True),
        ),
        migrations.AddField(
            model_name='transactionitem',
            name='added_by',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.PROTECT, related_name='payment_transactions', to=settings.AUTH_USER_MODEL),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='transactionitem',
            name='is_removed',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='transactionitem',
            name='status',
            field=models.CharField(choices=[('processed', 'Processed'), ('partially_refunded', 'Partially Refunded'), ('refunded', 'Refunded')], db_index=True, default=1, max_length=50),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='transactionitem',
            name='visitor_count',
            field=models.IntegerField(default=1),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='payment',
            name='status',
            field=models.CharField(choices=[('pending_settlement', 'Pending Settlement'), ('partially_settled', 'Partially Settled'), ('settled', 'Settled'), ('partially_refunded', 'Partially Refunded'), ('refunded', 'Refunded')], db_index=True, default='pending_settlement', max_length=50),
        ),
        migrations.AlterField(
            model_name='refund',
            name='status',
            field=models.CharField(choices=[('pending_allocations', 'Pending Allocations'), ('pending_transactions', 'Pending Transactions'), ('pending_settlement', 'Pending Settlement'), ('settled', 'Settled'), ('denied', 'Denied'), ('canceled', 'Canceled')], db_index=True, default='pending_allocations', max_length=50),
        ),
        migrations.AlterField(
            model_name='transactionitem',
            name='payment_type',
            field=models.CharField(choices=[('cash', 'Cash'), ('card', 'Card')], db_index=True, max_length=50),
        ),
        migrations.AlterModelTable(
            name='refund',
            table='payments_refunds',
        ),
        migrations.CreateModel(
            name='RefundTransactionItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('is_removed', models.BooleanField(default=False)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processed', 'Processed'), ('canceled', 'Canceled')], default='pending', max_length=50)),
                ('visitor_count', models.IntegerField()),
                ('requested_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('processed_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('processed_at', models.DateTimeField(blank=True, null=True)),
                ('added_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='added_refund_transactions', to=settings.AUTH_USER_MODEL)),
                ('processed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='processed_refund_transactions', to=settings.AUTH_USER_MODEL)),
                ('refund', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='refund_transaction_items', to='payments.refund')),
                ('transaction_item', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='refund_transaction_items', to='payments.transactionitem')),
            ],
            options={
                'db_table': 'payments_refund_transaction_items',
            },
        ),
        migrations.CreateModel(
            name='RefundVehicleAllocation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('is_removed', models.BooleanField(default=False)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('visitor_count', models.PositiveIntegerField(blank=True, null=True)),
                ('status', models.CharField(choices=[('pending_count', 'Pending Count'), ('counted', 'Counted'), ('settled', 'Settled'), ('denied', 'Denied'), ('canceled', 'Canceled')], default='pending_count', max_length=20)),
                ('processed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='allocated_refunds', to=settings.AUTH_USER_MODEL)),
                ('re_entry_item', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='refund_allocations', to='entrance.reentryitem')),
                ('refund', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vehicle_allocations', to='payments.refund')),
                ('ticket_item', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='refund_allocations', to='entrance.ticketitem')),
            ],
            options={
                'verbose_name': 'Refund Allocation',
                'verbose_name_plural': 'Refund Allocations',
            },
        ),
        migrations.DeleteModel(
            name='RefundTransaction',
        ),
        migrations.AddIndex(
            model_name='refundvehicleallocation',
            index=models.Index(fields=['refund', 'status'], name='payments_re_refund__dbd5c8_idx'),
        ),
        migrations.AddConstraint(
            model_name='refundvehicleallocation',
            constraint=models.CheckConstraint(check=models.Q(models.Q(('re_entry_item__isnull', True), ('ticket_item__isnull', False)), models.Q(('re_entry_item__isnull', False), ('ticket_item__isnull', True)), _connector='OR'), name='exactly_one_entrance_item'),
        ),
    ]
