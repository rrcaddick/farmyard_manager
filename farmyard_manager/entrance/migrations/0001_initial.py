# Generated by Django 5.0.12 on 2025-03-12 15:15

import django.db.models.deletion
import django_extensions.db.fields
import farmyard_manager.utils.time_utils
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('payments', '0001_initial'),
        ('vehicles', '0002_rename_security_fails_vehicle_security_fail_count_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Pricing',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('ticket_type', models.CharField(choices=[('public', 'Public'), ('group', 'Group'), ('school', 'School'), ('online', 'Online')], db_index=True, max_length=50)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('applies_from', models.DateTimeField()),
                ('applies_to', models.DateTimeField()),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'db_table': 'entrance_pricing',
            },
        ),
        migrations.CreateModel(
            name='ReEntry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('completed', 'Completed')], db_index=True, default='pending', max_length=50)),
                ('visitors_left', models.IntegerField()),
                ('visitors_returned', models.IntegerField(null=True)),
                ('completed_time', models.DateTimeField(null=True)),
                ('completed_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='completed_re_entries', to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='created_re_entries', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'entrance_re_entries',
            },
        ),
        migrations.CreateModel(
            name='Ticket',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('is_removed', models.BooleanField(default=False)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('type', models.CharField(blank=True, choices=[('public', 'Public'), ('group', 'Group'), ('school', 'School'), ('online', 'Online')], max_length=255)),
                ('status', models.CharField(choices=[('pending_security', 'Pending Security'), ('passed_security', 'Passed Security'), ('counted', 'Visitors Counted'), ('paid', 'Payment Processed'), ('group_entry_processed', 'Group Entry Processed'), ('online_entry_processed', 'Online Entry Processed'), ('school_entry_processed', 'School Entry Processed'), ('refunded', 'Ticket Refunded')], max_length=255)),
                ('ticket_number', models.BigIntegerField(default=farmyard_manager.utils.time_utils.get_unix_timestamp, unique=True)),
                ('visitor_count', models.IntegerField(null=True)),
                ('applied_price', models.DecimalField(decimal_places=2, max_digits=10, null=True)),
                ('payment', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tickets', to='payments.payment')),
                ('vehicle', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='tickets', to='vehicles.vehicle')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='StatusHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('prev_status', models.CharField(blank=True, choices=[('pending_security', 'Pending Security'), ('passed_security', 'Passed Security'), ('counted', 'Visitors Counted'), ('paid', 'Payment Processed'), ('group_entry_processed', 'Group Entry Processed'), ('online_entry_processed', 'Online Entry Processed'), ('school_entry_processed', 'School Entry Processed'), ('refunded', 'Ticket Refunded')], db_index=True, max_length=50)),
                ('new_status', models.CharField(choices=[('pending_security', 'Pending Security'), ('passed_security', 'Passed Security'), ('counted', 'Visitors Counted'), ('paid', 'Payment Processed'), ('group_entry_processed', 'Group Entry Processed'), ('online_entry_processed', 'Online Entry Processed'), ('school_entry_processed', 'School Entry Processed'), ('refunded', 'Ticket Refunded')], db_index=True, max_length=50)),
                ('performed_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='status_changes', to=settings.AUTH_USER_MODEL)),
                ('ticket', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='status_history', to='entrance.ticket')),
            ],
            options={
                'db_table': 'entrance_status_history',
            },
        ),
        migrations.CreateModel(
            name='ReEntryAddition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('paid', 'Paid')], db_index=True, max_length=50)),
                ('visitor_count', models.IntegerField()),
                ('applied_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('payment', models.OneToOneField(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='re_entry_payments', to='payments.payment')),
                ('re_entry', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='additional_visitors', to='entrance.reentry')),
                ('ticket', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='re_entry_additions', to='entrance.ticket')),
            ],
            options={
                'db_table': 'entrance_re_entry_additions',
            },
        ),
        migrations.AddField(
            model_name='reentry',
            name='ticket',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='re_entries', to='entrance.ticket'),
        ),
        migrations.CreateModel(
            name='EditHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('field', models.CharField(choices=[('type', 'Ticket Type'), ('visitor_count', 'Visitor Count')], db_index=True, max_length=50)),
                ('prev_value', models.CharField(max_length=255)),
                ('new_value', models.CharField(max_length=255)),
                ('performed_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='ticket_edits', to=settings.AUTH_USER_MODEL)),
                ('ticket', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='edit_history', to='entrance.ticket')),
            ],
            options={
                'db_table': 'entrance_edit_history',
            },
        ),
    ]
